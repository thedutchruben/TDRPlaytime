on: [release, workflow_dispatch]
name: Build plugin for all platforms

jobs:
  build:
    name: Build Plugin
    runs-on: ubuntu-latest

    strategy:
      matrix:
        downloadSource: [GITHUB, SPIGOT, HANGAR, MODRINTH, CURSE_FORGE]
        java-version: [17] # Adjust if versions differ per platform

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
          java-package: jdk
          architecture: x64
      - name: Set downloadSource in plugin.yml
        run: |
          sed -i "s/downloadSource:.*/downloadSource: '${{ matrix.downloadSource }}'/" src/main/resources/plugin.yml
          cat src/main/resources/plugin.yml
      - name: Build with Maven
        run: |
          mvn install
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          echo "git_hash=$git_hash" >> $GITHUB_ENV
          echo "artifactPath=$(pwd)/target" >> $GITHUB_ENV
      - name: Extract Maven project version
        id: project
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      - name: Upload Plugin jar to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Plugin-${{ matrix.downloadSource }}.jar
          path: ${{ env.artifactPath }}/TDRPlaytime-${{ steps.project.outputs.version }}.jar

  test-plugins:
    name: Test Plugin
    runs-on: ubuntu-latest

    needs: build
    strategy:
      matrix:
        downloadSource: [GITHUB, SPIGOT, HANGAR, MODRINTH, CURSE_FORGE]
        runtime: ['paper', 'spigot']
        version: [1.18.2, 1.19.4, 1.20.4]
        include:
          - version: 1.18.2
            java-version: 17
          - version: 1.19.4
            java-version: 17
          - version: 1.20.4
            java-version: 17

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: Plugin-${{ matrix.downloadSource }}.jar
          path: ./plugin
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
          java-package: jdk
          architecture: x64
      - name: Test Plugin - ${{ matrix.downloadSource }} - ${{ matrix.version }}
        uses:  gmitch215/TestMC@v2
        with:
          path: ./plugin/Plugin-${{ matrix.downloadSource }}.jar
          runtime: ${{ matrix.runtime }}
          version: ${{ matrix.version }}
  update-realses :
    name: Update Releases
    runs-on: ubuntu-latest
    needs: test-plugins
    steps:
      - name: Generate Commit Message List since last release
        id: commit_messages
        run: |
          last_tag=$(git describe --tags --abbrev=0)
          echo "Last release tag: $last_tag"
          commit_messages=$(git log $last_tag..HEAD --pretty=format:"- %s (%h)")
          echo "commit_messages=$commit_messages" >> $GITHUB_ENV
      - name: Create Pre-release and Upload Asset
        uses: actions/github-script@v7
        if: github.event_name == 'release'
        with:
          script: |
            const fs = require('fs');
            const path = `${process.env.artifactPath}/TDRPlaytime-${{ steps.project.outputs.version }}.jar`;

            // Generate the release body with commit messages
            const body = `### Changes since last release:\n${process.env.commit_messages}`;

            // get the realease
            const { data: release } = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            release.body = release.body + body;
            
            // update release
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              tag_name: release.tag_name,
              name: release.name,
              body: release.body,
              draft: false,
              prerelease: false
            });